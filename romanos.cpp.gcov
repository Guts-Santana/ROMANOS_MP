        -:    0:Source:romanos.cpp
        -:    1:#include "romanos.hpp"
        -:    2:#include <string>
        -:    3:
        -:    4:using namespace std;
        -:    5:
       41:    6:bool letra_invalida(string rom)
        -:    7:{
       41:    8:    string letras = "MDCLXVI";
        -:    9:    
      162:   10:    for (int i = 0; i < (int)rom.length(); i++)
        -:   11:    {
      132:   12:        if (letras.find(rom[i])==string::npos)
        -:   13:        {
       11:   14:            return true;
        -:   15:        }
        -:   16:    }
        -:   17:
       30:   18:    return false;
       41:   19:}
        -:   20:
        -:   21:
       30:   22:bool sintaxe_errada(string rom)
        -:   23:{
       42:   24:    for (int i=0;i<(int)rom.length()-1;i++)
        -:   25:    {
       42:   26:        int valor=0;
       42:   27:        if (rom[i]=='I')
        -:   28:        {
        9:   29:            if (rom[i+1]=='V' || rom[i+1]=='X')
        -:   30:            {
        8:   31:                for (int j=0;j<i;j++)
        -:   32:                {
        4:   33:                    if (rom[i]==rom[j])
        -:   34:                    {
    #####:   35:                        return true;
        -:   36:                    }
        -:   37:                }
        4:   38:                if (i!=(int)rom.length()-2)
        -:   39:                {
        4:   40:                    return true;
        -:   41:                }
        -:   42:            }
        -:   43:            //Ler a quantidade de Is;
       21:   44:            for (int k=0;k<(int)rom.length();k++)
        -:   45:            {
       16:   46:                if (rom[k]==rom[i])
        -:   47:                {
        7:   48:                    valor++;
        -:   49:                }
        -:   50:            }
        5:   51:            if (valor>3)
        -:   52:            {
    #####:   53:                return true;
        -:   54:            }
        5:   55:            if (rom[i+1]!='I')
        -:   56:            {
        4:   57:                return true;
        -:   58:            }
        -:   59:        }
       34:   60:        if (rom[i]=='V')
        -:   61:        {
       10:   62:            for (int j=0; j<(int)rom.length();j++)
        -:   63:            {
        8:   64:                if (rom[j]==rom[i])
        -:   65:                {
        5:   66:                    valor++;
        -:   67:                }
        -:   68:            }
        2:   69:            if (valor>1)
        -:   70:            {
        2:   71:                return true;
        -:   72:            }
    #####:   73:            if (rom[i+1]!='I')
        -:   74:            {
    #####:   75:                return true;
        -:   76:            }
        -:   77:        }
       32:   78:        if (rom[i]=='X')
        -:   79:        {
       13:   80:            for (int j=i+1;j<(int)rom.length();j++)
        -:   81:            {
       11:   82:                if (rom[j]=='M' || rom[j]=='D')
        -:   83:                {
        2:   84:                    return true;
        -:   85:                }
        9:   86:                if (rom[j]=='C' || rom[j]=='L')
        -:   87:                {
        2:   88:                    if (j!=i+1)
        -:   89:                    {
    #####:   90:                        return true;
        -:   91:                    }
        -:   92:                }
        9:   93:                if (rom[i+1]=='C' || rom[i+1]=='L')
        -:   94:                {
        4:   95:                    if (rom[j]=='X')
        -:   96:                    {
        1:   97:                        return true;
        -:   98:                    }
        -:   99:                }
        -:  100:            }
       11:  101:            for (int k=0;k<(int)rom.length();k++)
        -:  102:            {
        9:  103:                if (rom[k]==rom[i])
        -:  104:                {
        3:  105:                    valor++;
        -:  106:                }
        -:  107:            }
        2:  108:            if (valor>3)
        -:  109:            {
    #####:  110:                return true;
        -:  111:            }
       2*:  112:            for (int k=0;k>(int)rom.length();k++)
        -:  113:            {
    #####:  114:                if (rom[i]==rom[k])
        -:  115:                {
    #####:  116:                    valor++;
        -:  117:                }
        -:  118:            }
        2:  119:            if (valor>3)
        -:  120:            {
    #####:  121:                return true;
        -:  122:            }
        -:  123:
        -:  124:        }
       29:  125:        if (rom[i]=='L')
        -:  126:        {
       14:  127:            for (int j=0; j<(int)rom.length();j++)
        -:  128:            {
       11:  129:                if (rom[j]==rom[i])
        -:  130:                {
        6:  131:                    valor++;
        -:  132:                }
        -:  133:            }
        3:  134:            if (valor>1)
        -:  135:            {
        2:  136:                return true;
        -:  137:            }
        5:  138:            for (int k=i;k<(int)rom.length();k++) 
        -:  139:            {
       4*:  140:                if ( rom[k]=='M' || rom[k]=='D' || rom[k]=='C')
        -:  141:                {
    #####:  142:                    return true;
        -:  143:                }
        -:  144:            }
        -:  145:        }
       27:  146:        if (rom[i]=='C')
        -:  147:        {
       31:  148:            for (int k=i+1;k<(int)rom.length();k++)
        -:  149:            {
       27:  150:                if (rom[k]=='M' || rom[k]=='D')
        -:  151:                {
        9:  152:                    if (k!=i+1) 
        -:  153:                    {
        4:  154:                        return true;
        -:  155:                    }
        -:  156:                }
       23:  157:                if (rom[i+1]=='M' || rom[i+1]=='D')
        -:  158:                {
       15:  159:                    if (rom[k]=='C')
        -:  160:                    {
        1:  161:                        return true;
        -:  162:                    }
        -:  163:                }
        -:  164:                }
        -:  165:            }
      120:  166:            for (int j=0; j<(int)rom.length();j++)
        -:  167:            {
       98:  168:                if (rom[j]==rom[i])
        -:  169:                {
       32:  170:                    valor++;
        -:  171:                }
        -:  172:            }
       22:  173:            if (valor>3)
        -:  174:            {
        3:  175:                return true;
        -:  176:            }
       19:  177:        if(rom[i]=='D')
        -:  178:        {
       28:  179:            for (int j=0; j<(int)rom.length();j++)
        -:  180:            {
       23:  181:                if (rom[j]==rom[i])
        -:  182:                {
        8:  183:                    valor++;
        -:  184:                }
        -:  185:            }
        5:  186:            if (valor>1)
        -:  187:            {
        5:  188:                return true;
        -:  189:            }
        -:  190:        }
       14:  191:        if(rom[i]=='M')
        -:  192:        {
       42:  193:            for (int j=0; j<(int)rom.length();j++)
        -:  194:            {
       34:  195:                if (rom[j]==rom[i])
        -:  196:                {
       10:  197:                    valor++;
        -:  198:                }
        -:  199:            }
        8:  200:            if (valor>3)
        -:  201:            {
        2:  202:                return true;
        -:  203:            }
        -:  204:        }
        -:  205:    }
    #####:  206:    return false;
        -:  207:}   
        -:  208:
        -:  209:
        -:  210:
       41:  211:int romanos_para_decimal(string romano)
        -:  212:{
       41:  213:    if (letra_invalida(romano))
        -:  214:    {
       11:  215:      return -1;
        -:  216:    }
       30:  217:    else if (sintaxe_errada(romano))
        -:  218:    {
       30:  219:      return -1;
        -:  220:    }
        -:  221:
    #####:  222:  return 0;
        -:  223:}
        -:  224:
