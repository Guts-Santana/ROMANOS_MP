        -:    0:Source:romanos.cpp
        -:    1:#include "romanos.hpp"
        -:    2:#include <string>
        -:    3:
        -:    4:using namespace std;
        -:    5:
       78:    6:bool letra_invalida(string rom)
        -:    7:{
       78:    8:    string letras = "MDCLXVI";
        -:    9:    
      378:   10:    for (int i = 0; i < (int)rom.length(); i++)
        -:   11:    {
      311:   12:        if (letras.find(rom[i])==string::npos)
        -:   13:        {
       11:   14:            return true;
        -:   15:        }
        -:   16:    }
        -:   17:
       67:   18:    return false;
       78:   19:}
        -:   20:
        -:   21:
       67:   22:bool sintaxe_errada(string rom)
        -:   23:{
      216:   24:    for (int i=0;i<(int)rom.length()-1;i++)
        -:   25:    {
      183:   26:        int valor=0;
      183:   27:        if (rom[i]=='I')
        -:   28:        {
       28:   29:            if (rom[i+1]=='V' || rom[i+1]=='X')
        -:   30:            {
       32:   31:                for (int j=0;j<i;j++)
        -:   32:                {
       21:   33:                    if (rom[i]==rom[j])
        -:   34:                    {
        1:   35:                        return true;
        -:   36:                    }
        -:   37:                }
       11:   38:                if (i!=(int)rom.length()-2)
        -:   39:                {
        7:   40:                    return true;
        -:   41:                }
        -:   42:            }
        -:   43:            //Ler a quantidade de Is;
      124:   44:            for (int k=0;k<(int)rom.length();k++)
        -:   45:            {
      104:   46:                if (rom[k]==rom[i])
        -:   47:                {
       41:   48:                    valor++;
        -:   49:                }
        -:   50:            }
       20:   51:            if (valor>3)
        -:   52:            {
        1:   53:                return true;
        -:   54:            }
       19:   55:            if (rom[i+1]!='I' && rom[i+1]!='V' && rom[i+1]!='X')
        -:   56:            {
        4:   57:                return true;
        -:   58:            }
        -:   59:        }
      170:   60:        if (rom[i]=='V')
        -:   61:        {
       70:   62:            for (int j=0; j<(int)rom.length();j++)
        -:   63:            {
       60:   64:                if (rom[j]==rom[i])
        -:   65:                {
       13:   66:                    valor++;
        -:   67:                }
        -:   68:            }
       10:   69:            if (valor>1)
        -:   70:            {
        2:   71:                return true;
        -:   72:            }
        8:   73:            if (rom[i+1]!='I')
        -:   74:            {
    #####:   75:                return true;
        -:   76:            }
        -:   77:        }
      168:   78:        if (rom[i]=='X')
        -:   79:        {
      135:   80:            for (int j=i+1;j<(int)rom.length();j++)
        -:   81:            {
       98:   82:                if (rom[j]=='M' || rom[j]=='D')
        -:   83:                {
        2:   84:                    return true;
        -:   85:                }
       96:   86:                if (rom[j]=='C' || rom[j]=='L')
        -:   87:                {
       11:   88:                    if (j!=i+1)
        -:   89:                    {
        1:   90:                        return true;
        -:   91:                    }
        -:   92:                }
       95:   93:                if (rom[i+1]=='C' || rom[i+1]=='L')
        -:   94:                {
      24*:   95:                    if (rom[j]=='X' && rom[j-1]!='I')
        -:   96:                    {
    #####:   97:                        return true;
        -:   98:                    }
        -:   99:                }
        -:  100:            }
      276:  101:            for (int k=0;k<(int)rom.length();k++)
        -:  102:            {
      239:  103:                if (rom[k]==rom[i])
        -:  104:                {
       78:  105:                    valor++;
        -:  106:                }
        -:  107:            }
       37:  108:            if (valor>3)
        -:  109:            {
    #####:  110:                return true;
        -:  111:            }
      37*:  112:            for (int k=0;k>(int)rom.length();k++)
        -:  113:            {
    #####:  114:                if (rom[i]==rom[k])
        -:  115:                {
    #####:  116:                    if (valor==3 && rom[k-1]=='I')
        -:  117:                    {
    #####:  118:                        valor--;
        -:  119:                    }
    #####:  120:                    valor++;
        -:  121:                }
        -:  122:            }
       37:  123:            if (valor>3)
        -:  124:            {
    #####:  125:                return true;
        -:  126:            }
        -:  127:
        -:  128:        }
      165:  129:        if (rom[i]=='L')
        -:  130:        {
      108:  131:            for (int j=0; j<(int)rom.length();j++)
        -:  132:            {
       91:  133:                if (rom[j]==rom[i])
        -:  134:                {
       20:  135:                    valor++;
        -:  136:                }
        -:  137:            }
       17:  138:            if (valor>1)
        -:  139:            {
        2:  140:                return true;
        -:  141:            }
       74:  142:            for (int k=i;k<(int)rom.length();k++) 
        -:  143:            {
       60:  144:                if ( rom[k]=='M' || rom[k]=='D' || rom[k]=='C')
        -:  145:                {
        1:  146:                    return true;
        -:  147:                }
        -:  148:            }
        -:  149:        }
      162:  150:        if (rom[i]=='C')
        -:  151:        {
      217:  152:            for (int k=i+1;k<(int)rom.length();k++)
        -:  153:            {
      177:  154:                if (rom[k]=='M' || rom[k]=='D')
        -:  155:                {
       18:  156:                    if (k!=i+1) 
        -:  157:                    {
        5:  158:                        return true;
        -:  159:                    }
        -:  160:                }
      172:  161:                if (rom[i+1]=='M' || rom[i+1]=='D')
        -:  162:                {
       44:  163:                    if (rom[k]=='C' && rom[k-1]!='X')
        -:  164:                    {
        2:  165:                        return true;
        -:  166:                    }
        -:  167:                }
        -:  168:            }
      296:  169:            for (int j=0; j<(int)rom.length();j++)
        -:  170:            {
      256:  171:                if (rom[j]==rom[i])
        -:  172:                {
       90:  173:                    if (valor==3 && rom[j-1]=='X')
        -:  174:                    {
        4:  175:                        valor--;
        -:  176:                    }
       90:  177:                    valor++;
        -:  178:                }
        -:  179:            }
       40:  180:            if (valor>3)
        -:  181:            {
        1:  182:                return true;
        -:  183:            }
        -:  184:        }
      154:  185:        if(rom[i]=='D')
        -:  186:        {
      104:  187:            for (int j=0; j<(int)rom.length();j++)
        -:  188:            {
       89:  189:                if (rom[j]==rom[i])
        -:  190:                {
       19:  191:                    valor++;
        -:  192:                }
        -:  193:            }
       15:  194:            if (valor>1)
        -:  195:            {
        3:  196:                return true;
        -:  197:            }
        -:  198:        }
      151:  199:        if(rom[i]=='M')
        -:  200:        {
      132:  201:            for (int k=i+1;k<(int)rom.length();k++)
        -:  202:            {
     107*:  203:                if (rom[k]==rom[i] && !(rom[k-1]!='C' || rom[k-1]!='M'))
        -:  204:                {
    #####:  205:                    return true;
        -:  206:                }
      107:  207:                if (k>1)
        -:  208:                {
       89:  209:                    if (rom[k]==rom[i] && rom[k-2]!='M')
        -:  210:                    {
        1:  211:                    return true;
        -:  212:                    }
        -:  213:                }
        -:  214:            }
      165:  215:            for (int j=0; j<(int)rom.length();j++)
        -:  216:            {
      140:  217:                if (rom[j]==rom[i])
        -:  218:                {
      47*:  219:                    if (valor==3 && rom[j-1]=='C')
        -:  220:                    {
    #####:  221:                        valor--;
        -:  222:                    }
       47:  223:                    valor++;
        -:  224:                }
        -:  225:            }
       25:  226:            if (valor>3)
        -:  227:            {
        1:  228:                return true;
        -:  229:            }
        -:  230:        }
        -:  231:    }
       33:  232:    return false;
        -:  233:}   
        -:  234:
       33:  235:int valor_decimal(string rom)
        -:  236:{
       33:  237:    int decimal=0;
        -:  238:
      193:  239:    for (int i=0; i<(int)rom.length();i++)
        -:  240:    {
      160:  241:        if (rom[i]=='C')
        -:  242:        {
       37:  243:            if ((rom[i+1]=='D' || rom[i+1]=='M') && i!=(int)rom.length()-1)
        -:  244:            {
        6:  245:                decimal-=100;
        -:  246:            }
        -:  247:            else
        -:  248:            {
       31:  249:                decimal+=100;
        -:  250:            }
        -:  251:        }
      160:  252:        if (rom[i]=='X')
        -:  253:        {
       39:  254:            if ((rom[i+1]=='L' || rom[i+1]=='C') && i!=(int)rom.length()-1)
        -:  255:            {
        7:  256:                decimal-=10;
        -:  257:            }
        -:  258:             else
        -:  259:            {
       32:  260:                decimal+=10;
        -:  261:            }
        -:  262:        }
      160:  263:            if (rom[i]=='I')
        -:  264:        {
       30:  265:            if ((rom[i+1]=='V' || rom[i+1]=='X') && i!=(int)rom.length()-1)
        -:  266:            {
        4:  267:                decimal-=1;
        -:  268:            }
        -:  269:            else
        -:  270:            {
       26:  271:                decimal+=1;
        -:  272:            }
        -:  273:        }
      160:  274:        if (rom[i]=='M')
        -:  275:        {
       17:  276:            decimal+=1000;
        -:  277:        }
      160:  278:        if (rom[i]=='D')
        -:  279:        {
       10:  280:            decimal+=500;
        -:  281:        }
      160:  282:        if (rom[i]=='L')
        -:  283:        {
       13:  284:            decimal+=50;
        -:  285:        }
      160:  286:        if (rom[i]=='V')
        -:  287:        {
       14:  288:            decimal+=5;
        -:  289:        }
        -:  290:    }
        -:  291:
       33:  292:    return decimal;
        -:  293:}
        -:  294:
        -:  295:
        -:  296:
       78:  297:int romanos_para_decimal(string romano)
        -:  298:{
       78:  299:    if (letra_invalida(romano))
        -:  300:    {
       11:  301:      return -1;
        -:  302:    }
       67:  303:    else if (sintaxe_errada(romano))
        -:  304:    {
       34:  305:      return -1;
        -:  306:    }
        -:  307:
       33:  308:  return valor_decimal(romano);
        -:  309:}
        -:  310:
